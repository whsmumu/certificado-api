name: certificadonm
services:
  certificadodb:
    image: postgres:16
    container_name: certificado-postgresDB
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - certificadonm-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["dev"]

  pgadmin:
    image: dpage/pgadmin4
    container_name: certificado-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "15432:80"
    depends_on:
      certificadodb:
        condition: service_healthy
    networks:
      - certificadonm-network
    restart: always
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles: ["dev"]

  app-dev:
    image: maven:3.9.6-eclipse-temurin-21
    container_name: backend-dev
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://certificadodb:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: dev
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_DATASOURCE_DRIVER_CLASS: org.postgresql.Driver
    ports:
      - "8080:8080"
    depends_on:
      certificadodb:
        condition: service_healthy
    networks:
      - certificadonm-network
    profiles: ["dev"]

  frontend:
    image: node:24-alpine
    container_name: front-dev
    working_dir: /app
    volumes:
      - ../loja-track-sync-main:/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    networks:
      - certificadonm-network
    depends_on:
      - app-dev
    profiles: ["dev"]

networks:
  certificadonm-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
